import { useState, useEffect } from 'react';
import { 
  Row, 
  Col, 
  Typography, 
  Divider, 
  Image, 
  Card, 
  Carousel, 
  Statistic, 
  Empty, 
  Spin,
  Button,
  List,
  Timeline,
  Tag
} from 'antd';
import { 
  HomeOutlined, 
  StarOutlined, 
  TeamOutlined, 
  CalendarOutlined, 
  EnvironmentOutlined,
  ArrowRightOutlined,
  PhoneOutlined,
  MailOutlined,
  ClockCircleOutlined
} from '@ant-design/icons';
import { useNavigate } from 'react-router-dom';
import { getDefaultHotel } from '../../services/hotelService';
import './Introduce.scss';

const { Title, Paragraph, Text } = Typography;

function Introduce() {
  const [hotel, setHotel] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchHotelData = async () => {
      try {
        setLoading(true);
        const response = await getDefaultHotel();
        
        if (response && response.EC === 0 && response.DT) {
          setHotel(response.DT);
        } else {
          throw new Error(response?.EM || 'Kh√¥ng th·ªÉ t·∫£i th√¥ng tin kh√°ch s·∫°n');
        }
      } catch (err) {
        console.error('L·ªói khi l·∫•y th√¥ng tin kh√°ch s·∫°n:', err);
        setError(err.message || 'ƒê√£ x·∫£y ra l·ªói khi t·∫£i th√¥ng tin kh√°ch s·∫°n');
      } finally {
        setLoading(false);
      }
    };

    fetchHotelData();
  }, []);

  const goToRooms = () => {
    navigate('/room');
  };

  if (loading) {
    return (
      <div className="introduce-loading">
        <Spin size="large" />
        <Text>ƒêang t·∫£i th√¥ng tin kh√°ch s·∫°n...</Text>
      </div>
    );
  }

  if (error || !hotel) {
    return (
      <div className="introduce-error">
        <Empty
          description={error || 'Kh√¥ng t√¨m th·∫•y th√¥ng tin kh√°ch s·∫°n'}
          image={Empty.PRESENTED_IMAGE_SIMPLE}
        />
      </div>
    );
  }

  // T·∫°o d·ªØ li·ªáu m·∫´u cho c√°c ph·∫ßn c·∫ßn thi·∫øt
  const carouselImages = [
    hotel.hotelImage ? `http://localhost:6969/images/${hotel.hotelImage}` : 'https://via.placeholder.com/1200x500?text=Hotel+Image+1',
    'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8aG90ZWx8ZW58MHx8MHx8&auto=format&fit=crop&w=1200&q=60',
    'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjB8fGhvdGVsfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=1200&q=60',
    'https://images.unsplash.com/photo-1618773928121-c32242e63f39?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8OXx8aG90ZWwlMjByb29tfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=1200&q=60'
  ];

  const hotelAmenities = [
    { title: 'H·ªì B∆°i', description: 'H·ªì b∆°i v√¥ c·ª±c v·ªõi t·∫ßm nh√¨n tuy·ªát ƒë·∫πp', icon: 'üèä‚Äç‚ôÇÔ∏è' },
    { title: 'Nh√† H√†ng', description: 'Ph·ª•c v·ª• ·∫©m th·ª±c ƒëa d·∫°ng t·ª´ √Å ƒë·∫øn √Çu', icon: 'üçΩÔ∏è' },
    { title: 'Spa & Massage', description: 'D·ªãch v·ª• spa cao c·∫•p gi√∫p th∆∞ gi√£n', icon: 'üíÜ‚Äç‚ôÄÔ∏è' },
    { title: 'Ph√≤ng Gym', description: 'Ph√≤ng t·∫≠p hi·ªán ƒë·∫°i v·ªõi ƒë·∫ßy ƒë·ªß thi·∫øt b·ªã', icon: 'üèãÔ∏è‚Äç‚ôÇÔ∏è' },
    { title: 'Wi-Fi Mi·ªÖn Ph√≠', description: 'K·∫øt n·ªëi internet t·ªëc ƒë·ªô cao', icon: 'üì∂' },
    { title: 'ƒê∆∞a ƒê√≥n S√¢n Bay', description: 'D·ªãch v·ª• ƒë∆∞a ƒë√≥n s√¢n bay theo y√™u c·∫ßu', icon: 'üöó' }
  ];

  const hotelHistory = [
    {
      year: '2010',
      event: 'Kh·ªüi c√¥ng x√¢y d·ª±ng kh√°ch s·∫°n'
    },
    {
      year: '2012',
      event: 'Kh√°nh th√†nh v√† ƒëi v√†o ho·∫°t ƒë·ªông'
    },
    {
      year: '2015',
      event: 'N√¢ng c·∫•p v√† m·ªü r·ªông quy m√¥'
    },
    {
      year: '2018',
      event: 'ƒê·∫°t ch·ª©ng nh·∫≠n kh√°ch s·∫°n 5 sao'
    },
    {
      year: '2020',
      event: 'C·∫£i ti·∫øn d·ªãch v·ª• v√† trang thi·∫øt b·ªã'
    }
  ];

  const nearbyAttractions = [
    'Trung t√¢m th∆∞∆°ng m·∫°i (2km)',
    'B·∫£o t√†ng l·ªãch s·ª≠ (3km)',
    'B√£i bi·ªÉn (5km)',
    'C√¥ng vi√™n gi·∫£i tr√≠ (3.5km)',
    'Ch·ª£ ƒë√™m (1.8km)',
    'Ph·ªë ƒëi b·ªô (1.2km)'
  ];

  return (
    <div className="introduce-page">
      {/* Hero Banner */}
      <div className="introduce-banner">
        <Carousel autoplay effect="fade" className="introduce-carousel">
          {carouselImages.map((image, index) => (
            <div key={index}>
              <div 
                className="carousel-item" 
                style={{ backgroundImage: `url(${image})` }}
              >
                <div className="carousel-content">
                  <Title level={1}>{hotel.hotelName}</Title>
                  <div className="hotel-badges">
                    <Tag color="blue">{hotel.hotelType || 'Kh√°ch s·∫°n cao c·∫•p'}</Tag>
                    <Tag color="green">ƒêang ho·∫°t ƒë·ªông</Tag>
                  </div>
                  <Paragraph>{hotel.address}</Paragraph>
                  <Button type="primary" size="large" onClick={goToRooms}>
                    ƒê·∫∑t Ph√≤ng Ngay <ArrowRightOutlined />
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </Carousel>
      </div>

      <div className="introduce-container">
        {/* Gi·ªõi Thi·ªáu */}
        <section className="introduce-section">
          <Title level={2} className="section-title">Gi·ªõi Thi·ªáu V·ªÅ Ch√∫ng T√¥i</Title>
          <Divider className="section-divider" />
          <Row gutter={[32, 32]} align="middle">
            <Col xs={24} md={12}>
              <div className="content-box">
                <Paragraph className="introduction-text">
                  {hotel.description || 
                    `${hotel.hotelName} l√† m·ªôt kh√°ch s·∫°n sang tr·ªçng t·ªça l·∫°c t·∫°i v·ªã tr√≠ ƒë·∫Øc ƒë·ªãa gi·ªØa trung t√¢m th√†nh ph·ªë. V·ªõi ki·∫øn tr√∫c hi·ªán ƒë·∫°i v√† n·ªôi th·∫•t tinh t·∫ø, ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn cho qu√Ω kh√°ch tr·∫£i nghi·ªám l∆∞u tr√∫ ho√†n h·∫£o v·ªõi d·ªãch v·ª• chuy√™n nghi·ªáp v√† th√¢n thi·ªán.`
                  }
                </Paragraph>
                
                <div className="hotel-info">
                  <div className="info-item">
                    <CalendarOutlined className="info-icon" />
                    <div>
                      <Text strong>Ng√†y Th√†nh L·∫≠p:</Text>
                      <Text> {new Date(hotel.openDay).toLocaleDateString('vi-VN', {day: '2-digit', month: '2-digit', year: 'numeric'})}</Text>
                    </div>
                  </div>
                  
                  <div className="info-item">
                    <EnvironmentOutlined className="info-icon" />
                    <div>
                      <Text strong>ƒê·ªãa Ch·ªâ:</Text>
                      <Text> {hotel.address}</Text>
                    </div>
                  </div>
                  
                  <div className="info-item">
                    <PhoneOutlined className="info-icon" />
                    <div>
                      <Text strong>Li√™n H·ªá:</Text>
                      <Text> +84 (28) 3823 4999</Text>
                    </div>
                  </div>
                  
                  <div className="info-item">
                    <MailOutlined className="info-icon" />
                    <div>
                      <Text strong>Email:</Text>
                      <Text> info@{hotel.hotelName.toLowerCase().replace(/\s+/g, '')}hotel.com</Text>
                    </div>
                  </div>
                  
                  <div className="info-item">
                    <ClockCircleOutlined className="info-icon" />
                    <div>
                      <Text strong>Gi·ªù L√†m Vi·ªác:</Text>
                      <Text> Check-in: 14:00 | Check-out: 12:00</Text>
                    </div>
                  </div>
                </div>
              </div>
            </Col>
            <Col xs={24} md={12}>
              <div className="image-container">
                <Image
                  src={hotel.hotelImage 
                    ? `http://localhost:6969/images/${hotel.hotelImage}` 
                    : "https://images.unsplash.com/photo-1542314831-068cd1dbfeeb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8aG90ZWx8ZW58MHx8MHx8&auto=format&fit=crop&w=600&q=60"
                  }
                  alt={hotel.hotelName}
                  className="featured-image"
                  preview={false}
                />
              </div>
            </Col>
          </Row>
        </section>
        
        {/* Ti·ªán Nghi & D·ªãch V·ª• */}
        <section className="introduce-section">
          <Title level={2} className="section-title">Ti·ªán Nghi & D·ªãch V·ª•</Title>
          <Divider className="section-divider" />
          <Row gutter={[24, 24]}>
            {hotelAmenities.map((item, index) => (
              <Col xs={24} sm={12} md={8} key={index}>
                <Card className="amenity-card" hoverable>
                  <div className="amenity-icon">{item.icon}</div>
                  <div className="amenity-content">
                    <Title level={4}>{item.title}</Title>
                    <Paragraph>{item.description}</Paragraph>
                  </div>
                </Card>
              </Col>
            ))}
          </Row>
        </section>
        
        {/* S·ªë Li·ªáu Th·ªëng K√™ */}
        <section className="introduce-section stats-section">
          <Row gutter={[24, 24]}>
            <Col xs={12} md={6}>
              <Card className="stat-card">
                <Statistic 
                  title="NƒÉm Ho·∫°t ƒê·ªông" 
                  value={new Date().getFullYear() - new Date(hotel.openDay).getFullYear()} 
                  suffix="nƒÉm"
                  prefix={<CalendarOutlined />} 
                />
              </Card>
            </Col>
            <Col xs={12} md={6}>
              <Card className="stat-card">
                <Statistic 
                  title="S·ªë Ph√≤ng" 
                  value={hotel.Rooms?.length || 50} 
                  prefix={<HomeOutlined />} 
                />
              </Card>
            </Col>
            <Col xs={12} md={6}>
              <Card className="stat-card">
                <Statistic 
                  title="ƒê√°nh Gi√°" 
                  value={4.8} 
                  suffix="/5" 
                  precision={1}
                  prefix={<StarOutlined />} 
                />
              </Card>
            </Col>
            <Col xs={12} md={6}>
              <Card className="stat-card">
                <Statistic 
                  title="Nh√¢n Vi√™n" 
                  value={hotel.Users?.length || 35} 
                  prefix={<TeamOutlined />} 
                />
              </Card>
            </Col>
          </Row>
        </section>
        
        {/* V·ªã Tr√≠ & L·ªãch S·ª≠ */}
        <section className="introduce-section">
          <Row gutter={[48, 48]}>
            <Col xs={24} lg={12}>
              <div className="content-box">
                <Title level={3}>V·ªã Tr√≠</Title>
                <Divider />
                <Paragraph>
                  {hotel.hotelName} t·ªça l·∫°c t·∫°i {hotel.address}, m·ªôt v·ªã tr√≠ ƒë·∫Øc ƒë·ªãa v·ªõi nhi·ªÅu ti·ªán √≠ch xung quanh. T·ª´ ƒë√¢y, qu√Ω kh√°ch c√≥ th·ªÉ d·ªÖ d√†ng di chuy·ªÉn ƒë·∫øn c√°c ƒëi·ªÉm tham quan v√† mua s·∫Øm n·ªïi ti·∫øng trong th√†nh ph·ªë.
                </Paragraph>
                
                <Title level={4}>C√°c ƒê·ªãa ƒêi·ªÉm L√¢n C·∫≠n:</Title>
                <List
                  size="small"
                  bordered
                  dataSource={nearbyAttractions}
                  renderItem={(item) => <List.Item>{item}</List.Item>}
                  className="nearby-list"
                />
                
                <div className="map-container">
                  <iframe
                    src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3779.6543248183077!2d105.69434537490079!3d18.67283856733188!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3139cddf0bf20f23%3A0x86154b56a284fa6d!2zOTkgTMOqIER14bqpbiwgQsOqzIFuIFRodeG7tSwgVGjDoG5oIHBo4buRIFZpbmgsIE5naOG7hyBBbiwgVmnhu4d0IE5hbQ!5e0!3m2!1svi!2s!4v1689175967462!5m2!1svi!2s"
                    width="100%"
                    height="300"
                    style={{ border: 0, borderRadius: '8px', marginTop: '20px' }}
                    allowFullScreen=""
                    loading="lazy"
                    referrerPolicy="no-referrer-when-downgrade"
                    title="Hotel Location"
                  ></iframe>
                </div>
              </div>
            </Col>
            
            <Col xs={24} lg={12}>
              <div className="content-box">
                <Title level={3}>L·ªãch S·ª≠ Ph√°t Tri·ªÉn</Title>
                <Divider />
                <Paragraph>
                  T·ª´ ng√†y th√†nh l·∫≠p ƒë·∫øn nay, {hotel.hotelName} ƒë√£ tr·∫£i qua nhi·ªÅu giai ƒëo·∫°n ph√°t tri·ªÉn ƒë·ªÉ tr·ªü th√†nh m·ªôt trong nh·ªØng kh√°ch s·∫°n h√†ng ƒë·∫ßu trong khu v·ª±c.
                </Paragraph>
                
                <div className="history-timeline">
                  <Timeline mode="left">
                    {hotelHistory.map((item, index) => (
                      <Timeline.Item key={index} label={item.year}>
                        <div className="timeline-content">
                          <Text strong>{item.event}</Text>
                        </div>
                      </Timeline.Item>
                    ))}
                  </Timeline>
                </div>
              </div>
            </Col>
          </Row>
        </section>
        
        {/* CTA Section */}
        <section className="introduce-cta">
          <div className="cta-content">
            <Title level={2}>Tr·∫£i Nghi·ªám D·ªãch V·ª• C·ªßa Ch√∫ng T√¥i</Title>
            <Paragraph>
              ƒê·∫∑t ph√≤ng ngay h√¥m nay ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c ∆∞u ƒë√£i ƒë·∫∑c bi·ªát v√† b·∫Øt ƒë·∫ßu k·ª≥ ngh·ªâ tuy·ªát v·ªùi t·∫°i {hotel.hotelName}.
            </Paragraph>
            <Button type="primary" size="large" onClick={goToRooms}>
              ƒê·∫∑t Ph√≤ng Ngay <ArrowRightOutlined />
            </Button>
          </div>
        </section>
      </div>
    </div>
  );
}

export default Introduce;